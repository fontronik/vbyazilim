---
title: Training
---

<section class="hero is-vb">
    <div class="hero-body">
        <div class="container">
            <div class="columns">
                <div class="column">
                    <h1 class="title">Training</h1>
                    <h2 class="is-size-4 is-size-5-touch">Boost your <strong>development</strong> knowledge and <strong>coder</strong> skills!</h2>
                    <h2 class="subtitle mt-1-desktop mt-2-mobile is-size-6-touch">Every course includes special <strong>git-repo</strong> access,<br/><strong>pdf</strong> documents and <strong>video</strong> recordings of session!</h2>
                </div>
                <div class="column is-4 is-hidden-mobile">
                    <div class="zoomable"><%= image_tag "clip-macbook-pro.png", class: 'no-shadow' %></div>
                </div>
            </div>
        </div>
    </div>
</section>

<section class="section py-1 has-background-light" id="top">
    <div class="container">
        <nav class="level is-mobile">
            <div class="level-left">
                <div class="level-item is-size-7-mobile"><a href="#python-training" title="Python Training">Python</a></div>
                <div class="level-item is-size-7-mobile"><a href="#django-training" title="Django Training">Django</a></div>
                <div class="level-item is-size-7-mobile"><a href="#git-training" title="Git Training">Git</a></div>
                <div class="level-item is-size-7-mobile"><a href="#ruby-training" title="Ruby Training">Ruby</a></div>
                <div class="level-item is-size-7-mobile"><a href="#bash-training" title="Bash Training">Bash</a></div>
            </div>
        </nav>
    </div>
</section>

<section class="section has-white-background training">
    <div class="container">
        <div class="columns">
            <div class="column pt-0">
                <div class="content">
                    <h3 id="python-training">Python <span class="icon"><i class="fab fa-python"></i></span></h3>
                </div>
            </div>
        </div>
        
        <div class="columns">
            <div class="column is-5-desktop">
                <div class="content">
                    <h4>Python 101</h4>
                    <p>
                        Introduction to Python programming language. We&rsquo;ll cover
                        latest <strong>Python</strong> version <code>3.7+</code>
                    </p>
                    <ul>
                        <li>Coding format and standards</li>
                        <li>Python syntax</li>
                        <li>Delimiters, operators</li>
                        <li>What is <code>Object</code></li>
                        <li>What is <code>method</code></li>
                        <li>Variable and assignment</li>
                        <li>Built-in data types: <code>Booleans</code>, <code>Numbers</code>, <code>Nones</code></li>
                        <li>Sequences: <code>Strings</code>, <code>Lists</code>, <code>Tuples</code></li>
                        <li>Generators, Generators Expressions</li>
                        <li>Arithmetic operators</li>
                        <li><code>Sets</code> and <code>Dictionaries</code></li>
                        <li>Functions and Scope concept</li>
                        <li>Lambda Expressions</li>
                        <li>Control statements and conditions</li>
                        <li>Loops, Iterators and Iterables</li>
                    </ul>
                </div>
            </div>
            <div class="column is-5-desktop is-offset-2-desktop">
                <div class="content">
                    <h4>Python 102</h4>
                    <p>
                        Entering the magical world of Object Oriented Programming aka <strong>OOP</strong> in Python!
                        Are you ready for <code>Classes</code>, <code>Interitance</code> and more?
                    </p>
                    <ul>
                        <li>What is <code>Class</code> declaration ?</li>
                        <li>What is <code>Base Class</code> ?</li>
                        <li><code>Class</code> vs <code>Instance</code> and special methods</li>
                        <li>What is method resolution order aka <strong>MRO</strong> and why It&rsquo;s important!</li>
                        <li>What is <code>instance</code> ?</li>
                        <li>What is <code>method</code>, <code>property</code> or <code>attribute</code> ?</li>
                        <li>Getters, setters aka <strong>accessor</strong></li>
                        <li>Decorators</li>
                        <li>Object inspection</li>
                        <li>Hidden methods in an Object</li>
                        <li>What is method access level ? Pythonic aproaches</li>
                        <li>What is override, overload and <code>super</code> ?</li>
                        <li>What is <code>Meta Class</code>, <code>Abstract Base Class</code> ?</li>
                    </ul>
                    <h5 class="mt-2-desktop">Bonus</h5>
                    <ul>
                        <li>We&rsquo;ll build TODO command-line app</li>
                        <li>We&rsquo;ll pack our TODO app as Python package!</li>
                    </ul>
                </div>
            </div>
        </div>
        <div class="columns mt-2-desktop">
            <div class="column is-5-desktop">
                <div class="content">
                    <div class="content">
                        <h4>Testing Python App</h4>
                        <p>We&rsquo;ll discover built-in testing tools shipped with <strong>Python</strong>!</p>
                        <ul>
                            <li>Basics of testing, idea behind testing philosophy</li>
                            <li>What parts of the code should we test ?</li>
                            <li>What is <code>Docstring</code> test ?</li>
                            <li>Basics of <code>unittest</code></li>
                            <li>What is <code>assertion</code> ?</li>
                            <li>Overview: 3<sup>rd</sup> party testing libraries</li>
                        </ul>
                    </div>
                </div>
            </div>
            <div class="column is-5-desktop is-offset-2-desktop">
                <div class="content">
                    <div class="content">
                        <h4>Distributing Python Packages</h4>
                        <p>Python allows us to build and ship re-usable apps. Let&rsquo;s see that!</p>
                        <ul>
                            <li>How to build a standard Python package ?</li>
                            <li>Managing package dependencies</li>
                            <li>What are the most common mistakes ?</li>
                            <li>What is <strong>PyPI</strong> ?</li>
                            <li>Maintaining a package on PyPI: new releases, updates etc...</li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>

        <div class="columns mt-2-desktop">
            <div class="column is-5-desktop">
                <div class="content">
                    <div class="content">
                        <h4>Python Version Management</h4>
                        <p>There are lot&rsquo;s of Python versions around. How can we organize project based Python version?</p>
                        <ul>
                            <li>Understanding the <code>PYTHONPATH</code></li>
                            <li>Introduction to <code>pyenv</code></li>
                            <li>Installing <code>pyenv</code> to macOS, GNU Linux and Windows</li>
                            <li>Managing virtual environments with <code>pyenv</code></li>
                        </ul>
                    </div>
                </div>
            </div>
            <div class="column is-5-desktop is-offset-2-desktop">
                <div class="content">
                    <div class="content">
                        <h4>Python Development Environment</h4>
                        <p>You need some tools to write better Python code. What are those?</p>
                        <ul>
                            <li>Installing Python with version management</li>
                            <li>Choosing a Text Editor IDE ?</li>
                            <li>Configuring code writing tool to output <strong>A-GRADE</strong> Python code</li>
                            <li>Helper packages for formatting and linting</li>
                            <li>Extensions for most common editors such as TextMate, VS Code, Atom, Sublime, vim, emacs...</li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>

    </div>
</section>
<div class="container">
    <p class="pl-1-mobile"><a href="#top">Go back to top</a> y</p>
</div>
<hr/>

<section class="section has-white-background training">
    <div class="container">

        <div class="columns">
            <div class="column pt-0">
                <div class="content">
                    <h3 id="django-training">Django &nbsp;<span class="icon"><i class="fas fa-code"></i></span></h3>
                </div>
            </div>
        </div>
        
        <div class="columns">
            <div class="column is-5-desktop">
                <div class="content">
                    <h4>Django 101</h4>
                    <p>You can build web apps super fast with Django web application framework. Also batteries are included!</p>
                    <ul>
                        <li>Setting up Django development environment</li>
                        <li>What is <strong>Django Project</strong> ?</li>
                        <li>What is <strong>Django Application</strong> ?</li>
                        <li>Django project structure</li>
                        <li>Isolation of development, test, staging and production environments</li>
                        <li>What is Django Model ?</li>
                        <li>What is migration ?</li>
                        <li>What is Django ORM ?</li>
                        <li>Introduction to Django shell</li>
                        <li>Model-Template-View approach</li>
                        <li>Routing, URL dispatcher</li>
                        <li>What are to goodies shipped with Django ?</li>
                        <li>Built-in Django function, models, helpers</li>
                        <li>Basics of Django Admin</li>
                        <li>Basics of Authorization and Authentication</li>
                        <li>Quicklook: Function-based views</li>
                        <li>Quicklook: Class-based views</li>
                        <li>Swiss army-knife of Django: Django Debug Toolbar and Django Extensions</li>
                        <li>Integration 3<sup>rd</sup> party packages</li>
                        <li>Basics of deployment, let&rsquo;s deploy to <a class="is-external-link" href="https://heroku.com">Heroku</a></li>
                    </ul>
                    
                    <h5 class="mt-2-desktop">Bonus</h5>
                    <ul>
                        <li>We&rsquo;ll build a small app like GitHub&rsquo;s <a class="is-external-link" href="https://gist.github.com/">Gist</a></li>
                        <li>We&rsquo;ll integrate markdown parser, syntax highlighter and more...</li>
                    </ul>
                </div>
            </div>
            <div class="column is-5-desktop is-offset-2-desktop">
                <div class="content">
                    <h4>Advanced Django</h4>
                    <p>We&rsquo;ll dive in to more advanced topics, reveal the hidden gems of Django</p>
                    <ul>
                        <li>Class-based views in detail</li>
                        <li>Multi-table inheritance</li>
                        <li>What is Proxy model ?</li>
                        <li>What is Polymorphic relation ?</li>
                        <li>What is Generic relation ?</li>
                        <li>Custom Managers, Querysets</li>
                        <li>ORM performance and optimization</li>
                        <li>Debug in View! or in shell ?</li>
                        <li>What are Mixins ?</li>
                        <li>Data migration, pre-defined data providing, writing custom migrations</li>
                        <li>Built-in Signals, custom signals</li>
                        <li>Custom Users, custom User admin and more...</li>
                        <li>Localization aka <strong>I18N</strong>, Timezone aware data in the wild!</li>
                        <li>Permissions</li>
                        <li>PostgreSQL specific features</li>
                        <li>Intermediate Django Admin customization</li>
                        <li>Intermediate Django Admin widgets</li>
                        <li>Intermediate Django Forms</li>
                        <li>Custom management commands</li>
                        <li>Custom template tags and filters</li>
                        <li>Overriding Django classes in the right way</li>
                        <li>Testing views, admin site</li>
                        <li>Test tricks, mocking, mocking with <code>vcrpy</code></li>
                        <li>Caching... What are options ?</li>
                        <li>Advanced logging, custom loggers, formatters etc...</li>
                    </ul>
                </div>
            </div>
        </div>

        <div class="columns mt-2-desktop">
            <div class="column is-5-desktop">
                <div class="content">
                    <div class="content">
                        <h4>Hacking the Django Admin</h4>
                        <p>
                            Django shipped with awesome Admin features. Authors always mention that
                            &ldquo;Admin site is for the developers only, not for clients!&rdquo;
                            Let&rsquo;s change that!
                        </p>
                        <ul>
                            <li>Django 2.2 ships with awesome feates: Autocompletion for FK and M2M</li>
                            <li>Custom autocomplete views</li>
                            <li>Dive into <code>django.contrib.admin</code></li>
                            <li>Let&rsquo;s build our custom <code>BaseModelAdmin</code></li>
                            <li>Permission/Group based admin displays</li>
                            <li>Permission/Group based admin forms</li>
                            <li>Forms with fake fields</li>
                            <li>Custom Inline Formsets, custom initial data and more...</li>
                            <li>Working with calculated fields in Admin</li>
                            <li>Custom admin filters</li>
                            <li>Overriding change lists, change forms, injecting extra items!</li>
                            <li>Dashboard view</li>
                            <li>Soft deletion, versioning data</li>
                            <li>Handling large databases in Admin</li>
                            <li>Using built-in admin widgets for good!</li>
                            <li>Injecting JavaScript flavour to Admin</li>
                        </ul>
                    </div>
                </div>
            </div>
            <div class="column is-5-desktop is-offset-2-desktop">
                <div class="content">
                    <div class="content">
                        <h4>Django Tips and Tricks</h4>
                        <p>
                            We&rsquo;ll cover performance issues, <strong>DO</strong>s and <strong>DON&rsquo;T</strong>s.
                            Also, best practices from well-known Djangonauts
                        </p>
                        <ul>
                            <li>Fat Model + Skinny Controller!</li>
                            <li>ORM performance tips + new functions such as <code>Prefetch()</code> and more...</li>
                            <li>Curated list of model tips, view tips and ORM tips</li>
                            <li>Using transactions, preventing race-conditions</li>
                            <li>Examples of built-in Query Expressions: <code>F()</code>, <code>Func()</code>, <code>Value()</code>, custom Aggregate functions and more...</li>
                            <li>Creating custom lookups: <code>field__my_lookup=1</code></li>
                            <li>What bulk operations are ?</li>
                            <li>Who needs Elastic Search if you have <strong>PostgreSQL</strong> ? Search Vectors and more...</li>
                            <li>Migration optimization. Always check what Django produced!</li>
                            <li>All about Django Forms, hacking admin forms</li>
                        </ul>
                        <h5 class="mt-2-desktop">Bonus</h5>
                        <ul>
                            <li>Building apps faster then ever: <a class="is-external-link" href="https://github.com/vigo/django2-project-template">Django 2 Project Template</a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>

        <div class="columns mt-2-desktop">
            <div class="column is-5-desktop">
                <div class="content">
                    <div class="content">
                        <h4>Django Class-Based Views</h4>
                        <p>This is introductory level of Class-Based View usage in a Django application.</p>
                        <ul>
                            <li>Understanding Mixins and MRO</li>
                            <li>Introduction to Generic Views</li>
                            <li>Detailed inspection of Views and their MRO</li>
                            <li>Blending different views together!</li>
                            <li>Decorator usage</li>
                            <li>Data validation</li>
                            <li>Ajax and Class-Based Views</li>
                        </ul>
                    </div>
                </div>
            </div>
            <div class="column is-5-desktop is-offset-2-desktop">
                <div class="content">
                    <div class="content">
                        <h4>Django and Authentication</h4>
                        <p>Sometimes you need to authenticate users via different service backend such as <strong>LDAP</strong> or any custom service.</p>
                        <ul>
                            <li>Built-in authentication mechanisms</li>
                            <li>Writing custom authentication backend</li>
                            <li>What is Remote User ?</li>
                            <li>Accessing 3<sup>rd</sup> party providers such as LDAP</li>
                            <li>What about social auth ? Twitter, Facebook, GitHub etc ?</li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="columns mt-2-desktop">
            <div class="column is-5-desktop">
                <div class="content">
                    <div class="content">
                        <h4>Serving robust API with Django Rest Framework</h4>
                        <p>
                            We&rsquo;ve already built the application. All we 
                            need is <strong>DRF</strong> for API service!</p>
                        <ul>
                            <li>What REST stands for ? What is It ?</li>
                            <li>What DRF does to make your life easier ?</li>
                            <li>What is <strong>Serialization</strong> ?</li>
                            <li>Serializing Django models</li>
                            <li>Basic <strong>CRUD</strong> operations</li>
                            <li>Queries, pagination</li>
                            <li>Security, authorization</li>
                            <li>Routing principle</li>
                            <li>Related models, queries</li>
                            <li>Token authentication</li>
                            <li>API load balancing, throttling, rate limits and more...</li>
                        </ul>
                    </div>
                </div>
            </div>
            <div class="column is-5-desktop is-offset-2-desktop">
                <div class="content">
                    <div class="content">
                        <h4>Django Deployment Workshop</h4>
                        <p>
                            After watching <a class="is-external-link" href="https://jacobian.org">Jacob Kaplan-Moss</a>&rsquo; <a class="is-external-link" href="https://learning.oreilly.com/videos/django-deployment-workshop/9781449396442">Django Deployment Workshop</a> video from 
                            O&rsquo;Reilly Oscon Conference, <strong>June 2010</strong>, We&rsquo;ve inspired to do soo!
                        </p>
                        <ul>
                            <li>Provisioning Ubuntu OS&rsquo; (4 Vagrant instances)</li>
                            <li>Setting up application servers, load balancers, databases</li>
                            <li>Service and process management</li>
                            <li><strong>Gunicorn</strong> approach</li>
                            <li><strong>uWSGI</strong> approach</li>
                            <li>PostgreSQL pooling</li>
                            <li>Load balancing with <strong>NGINX</strong></li>
                            <li>Distributed Django application infrastructure</li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        
    </div>
</section>
<div class="container">
    <p class="pl-1-mobile"><a href="#top">Go back to top ↑</a> | <a href="#django-training">Go back to Django ↑</a></p>
</div>
<hr/>

<section class="section has-white-background training">
    <div class="container">

        <div class="columns">
            <div class="column pt-0">
                <div class="content">
                    <h3 id="git-training">Git <span class="icon"><i class="fas fa-code-branch"></i></span></h3>
                </div>
            </div>
        </div>
        
        <div class="columns">
            <div class="column is-5-desktop">
                <div class="content">
                    <h4>Git 101: Git for everyone!</h4>
                    <p>Day to day basic usage of <code>git</code> from command-line. Yes you can!</p>
                    <ul>
                        <li>How to install <code>git</code> to most common operating systems</li>
                        <li>What is <code>git</code> configuration ?</li>
                        <li>What is <strong>repository</strong> ?</li>
                        <li>What is <code>commit</code> ?</li>
                        <li>Working with files, making changes and un/tracking revisions</li>
                        <li>Isolation some file types</li>
                        <li>What is <code>branch</code> ?</li>
                        <li>What is <code>merge</code> ? What kind of merging does <code>git</code> provides ?</li>
                        <li>What is conflict ? How can we resolve conflicts ?</li>
                        <li>What is <code>stash</code>, <code>tag</code> ?</li>
                        <li>Undo, <code>reset</code>, <code>amend</code> and <code>revert</code> features</li>
                        <li>What are git aliases ? Let&rsquo;s make our own!</li>
                        <li>Call shell commands from config files!</li>
                        <li>Log operations, searching files, messages etc...</li>
                        <li><code>git</code> keeps everything at least <strong>90</strong> days!</li>
                        <li>Working with remotes</li>
                        <li>Basics of git platforms: GitHub, Gitlab and Bitbucket</li>
                    </ul>
                    <h5 class="mt-2-desktop">Bonus</h5>
                    <ul>
                        <li>Git cheat-sheet</li>
                    </ul>
                </div>
            </div>
            <div class="column is-5-desktop is-offset-2-desktop">
                <div class="content">
                    <h4>Advanced Git</h4>
                    <p>We&rsquo;ll dive deep in to amazing world of <code>git</code>.</p>
                    <ul>
                        <li>Intermediate inspection of git config file</li>
                        <li>How to compress files</li>
                        <li>What is <strong>merge commit</strong> ?</li>
                        <li>What is <strong>bundling</strong> ?</li>
                        <li>Getting shallow copy of a repo</li>
                        <li>Interactive add, patching and rebasing</li>
                        <li>How stash works ? Basic tips for better stashing</li>
                        <li>Solving <code>rebase</code> and <code>stash</code> conflicts</li>
                        <li>Pick any commit via <code>cherry-pick</code></li>
                        <li>Browse revisions from command-line</li>
                        <li>Detailed <code>diff</code> operations</li>
                        <li>Split and join commits</li>
                        <li>Changing orders commits</li>
                        <li>Bug hunting with <code>bisect</code></li>
                        <li>Modify any/all commit repo-wide</li>
                        <li>Sign your commits/tags with GPG</li>
                        <li>Commit annotations, notes</li>
                        <li>Patching recipes</li>
                        <li>Reflog and garbage collection</li>
                        <li>Handy cli helper: <code>tig</code></li>
                        <li>Build your own git extension: <a href="https://github.com/vigo/kommit" class="is-external-link">Kommit</a></li>
                        <li>What are <code>git-hooks</code> ?</li>
                        <li>More best practices, tips and work-flows</li>
                    </ul>
                </div>
            </div>
        </div>

    </div>
</section>
<div class="container">
    <p class="pl-1-mobile"><a href="#top">Go back to top ↑</a> | <a href="#git-training">Go back to Git ↑</a></p>
</div>
<hr/>

<section class="section has-white-background training">
    <div class="container">

        <div class="columns">
            <div class="column pt-0">
                <div class="content">
                    <h3 id="ruby-training">Ruby &nbsp;<span class="icon"><i class="fas fa-code"></i></span></h3>
                </div>
            </div>
        </div>
        
        <div class="columns">
            <div class="column is-5-desktop">
                <div class="content">
                    <h4>Ruby 101</h4>
                    <p>
                        Ruby has the easiest learning curve comparing to other programing languages.
                        Let&rsquo;s dive right in to easy and elegant world of <strong>Ruby</strong>!
                    </p>
                    <ul>
                        <li>How Ruby works ?</li>
                        <li>Ruby syntax</li>
                        <li>Interactive shell aka REPL: <code>irb</code></li>
                        <li>Pre-defined variables, variables, pseudo variables</li>
                        <li>Operators, constants</li>
                        <li>Methods, blocks, proc and lambda notions</li>
                        <li>Conditions, control statements</li>
                        <li>Enumeration, iterators, loops and more...</li>
                        <li>Built-in data types</li>
                        <li>Object Oriented Ruby: <code>Class</code> and <code>Modules</code></li>
                        <li>Exception handling</li>
                        <li>Quicklook: File system, IO and Kernel module</li>
                        <li>Basics of Rubygems</li>
                    </ul>
                </div>
            </div>
            <div class="column is-5-desktop is-offset-2-desktop">
                <div class="content">
                    <h4>Ruby and TDD 101</h4>
                    <p>
                        Ruby is a test-first programming language. Let&rsquo;s
                        take a look at built-in testing tools.
                    </p>
                    <ul>
                        <li>Introduction to testing, importance</li>
                        <li>What are built-in test helpers and tools ?</li>
                        <li>What are testing kinds ?</li>
                        <li>Mocking, stubbing, test doubles notions</li>
                        <li>What is <strong>Minitest</strong> ?</li>
                        <li>Quicklook: What is <strong>Rspec</strong> ?</li>
                    </ul>
                    <h5 class="mt-2-desktop">Bonus</h5>
                    <ul>
                        <li>We&rsquo;ll build command-line bookmark saving tool</li>
                    </ul>
                </div>
            </div>
        </div>

        <div class="columns mt-2-desktop">
            <div class="column is-5-desktop">
                <div class="content">
                    <h4>Sinatra 101</h4>
                    <p>
                        You can build ruby apps in minutes. From basic apps to complex database apps
                        <strong>Sinatra</strong> is the most famous light-weight web framework!
                    </p>
                    <ul>
                        <li>More than Rack, less then Rails &dash; <a href="http://danbenjamin.com/" class="is-external-link">Den Benjamin</a></li>
                        <li>Sinatra&rsquo;s DSL structure</li>
                        <li>Handlers and HTTP methods</li>
                        <li>URL Params, splat, regex and conditional matchers</li>
                        <li>ERB and Views</li>
                        <li>What is layout ?</li>
                        <li>Static files such as images, JavaScript and CSS files</li>
                        <li>Easy integration of almost any kind of file type such as <strong>Sass</strong>, <strong>Markdown</strong></li>
                        <li>What are filters and helper ?</li>
                        <li>Making custom filters and custom helpers</li>
                        <li>Handling, canceling, redirecting, passing or raising errors on http requests</li>
                        <li>Environment isolation: testing, development or production</li>
                        <li>Manage sessions</li>
                        <li>Testing Sinatra apps</li>
                        <li>One file app or structured app ?</li>
                        <li>Deploy basic Sinatra app to Heroku</li>
                    </ul>
                </div>
            </div>
            <div class="column is-5-desktop is-offset-2-desktop">
                <div class="content">
                    <div class="content">
                        <h4>Sinatra and Active Record</h4>
                        <p>
                            Active Record is the most common/famous object relational 
                            mapping library aka <strong>ORM</strong> for <strong>Ruby on Rails</strong>.
                            We can use it with <strong>Sinatra</strong> too!
                        </p>
                        <ul>
                            <li>Basics of ORM: What is It ?</li>
                            <li>Introduction to Active Record, conventions and rules</li>
                            <li>What is Schema ?</li>
                            <li>What is Model ?</li>
                            <li>What is Migration ?</li>
                            <li>Data validation</li>
                            <li>Prepare your app for integration</li>
                            <li>Active Record related Rake tasks</li>
                            <li>Fat Model - Skinny Controller</li>
                            <li>CRUD with Active Record</li>
                            <li>Querying database</li>
                            <li>Model relations, building and querying related objects</li>
                        </ul>
                        <h5 class="mt-2-desktop">Bonus</h5>
                        <ul>
                            <li>We&rsquo;ll build a blog application and deploy It to Heroku!</li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="columns mt-2-desktop">
            <div class="column is-5-desktop">
                <div class="content">
                    <div class="content">
                        <h4>Building Basic Rack Application</h4>
                        <p>Build Ruby web apps with Rack!</p>
                        <ul>
                            <li>Understanding http</li>
                            <li>What is Rack? How It works ?</li>
                            <li>What is Rack Middleware ?</li>
                            <li>What are the Rack&rsquo;s layers ?</li>
                            <li>How to protect http requests ?</li>
                            <li>Handling http methods</li>
                            <li>Let&rsquo;s build custom Rack extension!</li>
                            <li>How to deploy Rack application ?</li>
                        </ul>
                        <h5 class="mt-2-desktop">Bonus</h5>
                        <ul>
                            <li>We&rsquo;re going to build a <strong>Guestbook</strong> app</li>
                        </ul>
                    </div>
                </div>
            </div>
            <div class="column is-5-desktop is-offset-2-desktop">
                <div class="content">
                    <div class="content">
                        <h4>Making Static sites with Middleman</h4>
                        <p>
                            At the end of the day, all we need is a bunch of html files to run a website right ?
                            Let&rsquo;s build It!
                        </p>
                        <ul>
                            <li>What is static website ?</li>
                            <li>What is Middleman ?</li>
                            <li>What are the built-in components ?</li>
                            <li>Html templating, template helpers, renderers</li>
                            <li>Assets pipeline</li>
                            <li>Data automation</li>
                            <li>Multi language web sites</li>
                            <li>Integration with 3<sup>rd</sup> party services</li>
                            <li>Deploy Middleman app via <strong>GitHub Pages</strong></li>
                        </ul>
                        <h5 class="mt-2-desktop">Bonus</h5>
                        <ul>
                            <li>We&rsquo;re going to build an e-commerce application</li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>

        <div class="columns mt-2-desktop">
            <div class="column is-5-desktop">
                <div class="content">
                    <div class="content">
                        <h4>How to make gem file ?</h4>
                        <p>Ruby gem is a package contains tools, helpers, sometimes frame-works. 
                            Ship and deploy re-usable code with Rubygems!
                        </p>
                        <ul>
                            <li>What is Bundler ?</li>
                            <li>Create gem template with Bundler</li>
                            <li>Managing manifest files, revisions, releases</li>
                            <li>Gem development environment and dependencies</li>
                            <li>Extensible gem development</li>
                            <li>Publish your gem to Rubygems!</li>
                        </ul>
                        <h5 class="mt-2-desktop">Bonus</h5>
                        <ul>
                            <li>We&rsquo;re going to build GitHub Issue tracker!</li>
                        </ul>
                    </div>
                </div>
            </div>
            <div class="column is-5-desktop is-offset-2-desktop">
                <div class="content">
                    <div class="content">
                        <h4>It&rsquo;s not a <code>Makefile</code> It&rsquo;s <code>Rakefile</code></h4>
                        <p>
                            You can automate your daily tasks, common operations as-easy-as writing a Ruby code!
                            Welcome to wonderful world of <code>Rakefile</code>
                        </p>
                        <ul>
                            <li>Tribute to <a href="https://github.com/jimweirich" class="is-external-link">Jim Weirich</a></li>
                            <li>Anatomy of a Rakefile, It&rsquo;s DSL</li>
                            <li>Basic tasks</li>
                            <li>Tasks with params</li>
                            <li>Name spaces</li>
                            <li>Multi tasks</li>
                            <li>Rules</li>
                            <li>Built-in tasks</li>
                            <li><code>File</code>, <code>FileList</code> and <code>Directory</code> features</li>
                            <li>Global / local tasks</li>
                            <li>3<sup>rd</sup> party Rake extensions</li>
                            <li>Real-life examples</li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        
    </div>
</section>
<div class="container">
    <p class="pl-1-mobile"><a href="#top">Go back to top ↑</a> | <a href="#ruby-training">Go back to Ruby ↑</a></p>
</div>
<hr/>

<section class="section has-white-background training">
    <div class="container">

        <div class="columns">
            <div class="column pt-0">
                <div class="content">
                    <h3 id="bash-training">Bash &nbsp;<span class="icon"><i class="fas fa-terminal"></i></span></h3>
                </div>
            </div>
        </div>
        
        <div class="columns">
            <div class="column is-5-desktop">
                <div class="content">
                    <h4>Bash 101</h4>
                    <p>Bash is an open-door to Kernel! Every *NIX bases operating systems have a shell entrance!</p>
                    <ul>
                        <li>Variables and environment</li>
                        <li>Built-in commands</li>
                        <li>Profile, settings and configurations</li>
                        <li>Calling a shell command, getting help about It!</li>
                        <li>Permissions, users, groups and others</li>
                        <li>Files, inspection and analyze</li>
                        <li>Syntax</li>
                        <li>META characters, parenthesis expressions, quoting</li>
                        <li>Command formation, chaining/piping commands</li>
                        <li>File descriptors, IO redirection and PIPE</li>
                        <li>Standard IN/OUT/ERR</li>
                        <li>Data types, arithmetical expressions</li>
                        <li>Functions, conditions and loops</li>
                    </ul>
                    <h5 class="mt-2-desktop">Bonus</h5>
                    <ul>
                        <li>Anatomy of a Bash completion</li>
                        <li>I18N and localization examples</li>
                    </ul>
                </div>
            </div>
            <div class="column is-5-desktop is-offset-2-desktop">
                <div class="content">
                    <h4>Make your own Vagrant Box</h4>
                    <p>Sometimes you need your own box to play with. Now It&rsquo;s time to build your vagrant os box!</p>
                    <ul>
                        <li>Setting up VirtualBox provider</li>
                        <li>Configuring VirtualBox in detail</li>
                        <li>Building custom Ubuntu box (<em>latest edition</em>)</li>
                        <li>Initial provisioning for custom box</li>
                        <li>Network and other devices configurations</li>
                        <li>Install newly built box</li>
                        <li>Maintain you own box for future upgrades</li>
                        <li>Vagrant host/guest tips and tricks</li>
                    </ul>
                    <h5 class="mt-2-desktop">Bonus</h5>
                    <ul>
                        <li>NGINX server setup and integration to custom box</li>
                    </ul>
                </div>
            </div>
        </div>

        <div class="columns mt-2-desktop">
            <div class="column is-5-desktop">
                <div class="content">
                    <div class="content">
                        <h4>Building Command-Line Apps with Bash</h4>
                        <p>You can build almost anything with Bash. From small tools to complicated apps, even a webserver!</p>
                        <ul>
                            <li>Parsing command-line arguments</li>
                            <li>Errors and exceptions in Bash way</li>
                            <li>Linting and checking shell code</li>
                            <li>Testing bash scripts, TDD is everyhere</li>
                            <li>Adding bash-comletion and localization</li>
                            <li>Adding man page for your bash tool</li>
                            <li>How to create <a href="https://brew.sh" class="is-external-link">brew</a> packages</li>
                            <li>Distributing your app with homebrew</li>
                        </ul>
                    </div>
                </div>
            </div>
            <div class="column is-5-desktop is-offset-2-desktop">
                <div class="content">
                    <div class="content">
                        <h4>Introduction to Docker</h4>
                        <p>Let&rsquo;s build and ship our apps with <a class="is-external-link" href="https://docker.com">Docker</a></p>
                        <ul>
                            <li>What is Docker engine ?</li>
                            <li>Docker images vs containers</li>
                            <li>What is <code>Dockerfile</code> ?</li>
                            <li>Environment variables, passing arguments</li>
                            <li>How to create container from image?</li>
                            <li>What is Volume ? How to persist data ?</li>
                            <li>Sharing volumes amongst containers</li>
                            <li>What is Docker Compose ?</li>
                            <li>Lets dockerize our Python app</li>
                            <li>Lets dockerize our Django app</li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>

    </div>
</section>
<div class="container">
    <p class="mb-2 pl-1-mobile"><a href="#top">Go back to top ↑</a> | <a href="#bash-training">Go back to Bash ↑</a></p>
</div>

<% content_for :opengraph do %>
<meta property="og:title" content="vb YAZILIM" />
    <meta property="og:type" content="website" />
    <meta property="og:url" content="https://vbyazilim.com/training/" />

    <meta property="og:image" content="https://vbyazilim.com/public/images/clip-macbook-pro.png" />
    <meta property="og:image:secure_url" content="https://vbyazilim.com/public/images/clip-macbook-pro.png" />
    <meta property="og:image:width" content="1000" />
    <meta property="og:image:height" content="583" />

    <meta property="og:description" content="Training services of vb YAZILIM">
    <meta property="og:locale" content="en_US" />
    <meta property="og:site_name" content="vb YAZILIM" />
<% end %>
